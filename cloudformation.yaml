---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs10.x
    MemorySize: 1024
    Timeout: 3
    Layers:
      - !Ref SharedLayer
    Handler: index.handler
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./swagger.yaml
      StageName: prod
      MinimumCompressionSize: 0

  ApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: YOUR_HOSTNAME
      CertificateArn: !Sub
        - arn:${AWS::Partition}:acm:us-east-1:${AWS::AccountId}:certificate/${CertificateId}
        - CertificateId: YOUR_SSL_CERTIFICATE_ID

  ApiGatewayBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ApiGatewayDomainName
      RestApiId: !Ref ApiGatewayApi
      Stage: !Ref ApiGatewayApi.Stage

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  GetIndexFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/http/get-index
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          # Sapper insists on the base URL of its `fetch` requests to specify a port.
          PORT: ''
      Events:
        HttpGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: GET
        HttpGetProxy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{proxy+}
            Method: GET

  GetPostsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/http/get-posts
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        HttpGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /api/posts
            Method: GET

  GetPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/http/get-post
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        HttpGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /api/posts/{slug}
            Method: GET

  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: functions/shared
